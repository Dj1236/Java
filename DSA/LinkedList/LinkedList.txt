A linked list is a data structure used in Java and other programming languages to store a collection of elements.
Unlike arrays, linked lists do not require a contiguous block of memory; instead, they consist of nodes where each node
contains the element and a reference (or link) to the next node in the sequence.
Types of Linked Lists
Singly Linked List: Each node contains a data part and a link to the next node.
Doubly Linked List: Each node contains a data part, a link to the next node, and a link to the previous node.
Circular Linked List: The last node of the list links back to the first node, forming a circle.
In a singly linked list, a node typically contains:
Data: The value stored in the node.
Next: A reference to the next node in the list.
A linked list is a data structure used for storing a collection of elements,
where each element points to the next one, forming a sequence.
Linked lists are dynamic, allowing efficient insertion and deletion of elements. 
They come in several variations, such as singly linked lists, doubly linked lists, and circular linked lists

